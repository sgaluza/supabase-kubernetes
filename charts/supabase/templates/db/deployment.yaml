{{- if .Values.db.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supabase.db.fullname" . }}
  labels:
    {{- include "supabase.labels" . | nindent 4 }}
spec:
  {{- if not .Values.db.autoscaling.enabled }}
  replicas: {{ .Values.db.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "supabase.db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.db.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "supabase.db.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.db.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "supabase.db.serviceAccountName" . }}
      containers:
        - name: {{ include "supabase.db.name" $ }}
          image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          command: ["/usr/local/bin/docker-entrypoint.sh"]
          args:
            - postgres
            - -c
            - config_file=/etc/postgresql/postgresql.conf
            - -c
            - log_min_messages=fatal
          env:
            {{- range $key, $value := .Values.db.environment }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.username | default "username" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: username
                  {{- end }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.password | default "password" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: password
                  {{- end }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.password | default "password" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: password
                  {{- end }}
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.database | default "database" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: database
                  {{- end }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.db.secretRef }}
                  name: {{ .Values.secret.db.secretRef }}
                  key: {{ .Values.secret.db.secretRefKey.database | default "database" }}
                  {{- else }}
                  name: {{ include "supabase.secret.db" . }}
                  key: database
                  {{- end }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  {{- if .Values.secret.jwt.secretRef }}
                  name: {{ .Values.secret.jwt.secretRef }}
                  key: {{ .Values.secret.jwt.secretRefKey.secret | default "secret" }}
                  {{- else }}
                  name: {{ include "supabase.secret.jwt" . }}
                  key: secret
                  {{- end }}
          {{- with .Values.db.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.db.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 9999
              protocol: TCP
          volumeMounts:
            {{- with .Values.db.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - mountPath: /docker-entrypoint-initdb.d/migrations/97-_supabase.sql
              name: supabase-sql
              subPath: 97-_supabase.sql
            - mountPath: /docker-entrypoint-initdb.d/migrations/99-logs.sql
              name: logs-sql
              subPath: 99-logs.sql
            - mountPath: /docker-entrypoint-initdb.d/migrations/99-realtime.sql
              name: realtime-sql
              subPath: 99-realtime.sql
            - mountPath: /docker-entrypoint-initdb.d/migrations/99-pooler.sql
              name: pooler-sql
              subPath: 99-pooler.sql
            - mountPath: /docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql
              name: webhooks-sql
              subPath: 98-webhooks.sql
            - mountPath: /docker-entrypoint-initdb.d/init-scripts/99-roles.sql
              name: roles-sql
              subPath: 99-roles.sql
            - mountPath: /docker-entrypoint-initdb.d/init-scripts/99-jwt.sql
              name: jwt-sql
              subPath: 99-jwt.sql
            {{- if .Values.db.persistence.enabled }}
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume
              subPath: postgres-data
            {{- end }}
          {{- with .Values.db.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: supabase-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 97-_supabase.sql
              path: 97-_supabase.sql
        - name: logs-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 99-logs.sql
              path: 99-logs.sql
        - name: realtime-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 99-realtime.sql
              path: 99-realtime.sql
        - name: pooler-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 99-pooler.sql
              path: 99-pooler.sql
        - name: webhooks-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 98-webhooks.sql
              path: 98-webhooks.sql
        - name: roles-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 99-roles.sql
              path: 99-roles.sql
        - name: jwt-sql
          configMap:
            name: {{ include "supabase.db.fullname" . }}-init
            items:
            - key: 99-jwt.sql
              path: 99-jwt.sql
        {{- with .Values.db.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.db.persistence.enabled }}
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: {{ include "supabase.db.fullname" . }}-pvc
        {{- end }}
      {{- with .Values.db.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.db.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.db.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}